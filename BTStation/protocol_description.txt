1. Формат кадра:
	0 - 0xFE
	1 - 0xFE
	2 - packet ID
	3 - station number
	4 - data_length (data[0]...data[k])
	5 - command / reply code
	6 - data[0] / error code
	n-1 - data[k]
	n - CRC8 (packet ID...data[k])

2. Формат блока хранения команд в flash-памяти:
	0-1: номер команды
	2-5: время инициализации
	6-7: маска команды
	8-11: время отметки на станции
	12-13: размер дампа карточки [byte]
	14-15: резерв
	16-1023: полный дамп содержимого карточки

	Размер блока задается командой setTeamFlashSize()
	Нулевой блок не используется (нет команды №0).
	Последние 4096 байт flash-памяти (последний блок) используется как временный буфер для перезаписи блоков команд.

3. Формат хранения данных на карточке участника:
	Страница(4 байта) - описание байт
	0 - [0-3] UID1
	1 - [0-3] UID2
	2 - [0-3] системные
	3 - [0-1] системные,[2] тип чипа,[3] системные
	4 - [0-1] номер команды, [2] тип чипа, [3] версия прошивки при инициализации
	5 - [0-3] время инициализации
	6 - [0-1] маска команды, [2-3] зарезервировано
	7 - [0-3] зарезервировано
	8 - [0] номер КП, [1-3] время посещения КП (байт 0 берется из времени инициализации карточки)
	9 - ...
	n-4 - [0-3] системные
	n-3 - [0-3] системные
	n-2 - [0-3] системные
	n-1 - [0-3] системные
	n - [0-3] системные

4. Список команд:
	//изменение режима станции
	setMode(): 0x80
		0[byte]: новый номер режима
		ответ: 0x90
		0[byte]: код ошибки
	
	//установка часов станции
	setTime(): 0x81
		0-5[byteArray]: дата и время [yy.mm.dd hh:mm:ss]
		ответ: 0x91
		0[byte]: код ошибки
		1-4[Uint32]: текущее время
	
	//сброс данных станции
	resetStation(): 0x82
		0-1[Uint16]: кол-во отмеченных карточек (для проверки)
		2-5[Uint32]: время последней отметки (для проверки)
		6[byte]: новый номер станции
		ответ: 0x92
		0[byte]: код ошибки
	
	//текущее состояние станции
	getStatus(): 0x83
		ответ: 0x93
		0[byte]: код ошибки
		1-4[Uint32]: текущее время
		5-6[Uint16]: количество отметок на станции
		7-10[Uint32]: время последней отметки на станции
		11-12[Uint16]: напряжение батареи в условных единицах [0..1023] ~ [0..1.1В]
		13-14[Uint16]: температура чипа DS3231 (чуть выше окружающей среды)
	
	//обнулить карточку и подготовить для выдаче команде
	initChip(): 0x84
		0-1[Uint16]: номер команды
		2-3[Uint16]: маска участников
		ответ: 0x94
		0[byte]: код ошибки
		1-4[Uint32]: время инициализации
		5-12[byteArray]: UID карточки
	
	//получить последние отметившиеся команды
	getLastTeams(): 0x85
		ответ: 0x95
		0[byte]: код ошибки
		1-2[Uint16]: номер 1й команды
		3-4[Uint16]: номер 2й команды
		...	
		(n-1)-n[Uint16]: номер последней команды
	
	//получить записи об отметившихся командах из памяти станции
	getTeamRecord(): 0x86
		0-1[Uint16]: #команды
		ответ: 0x96
		0[byte]: код ошибки
		1-2[Uint16]: номер команды
		3-6[Uint32]: время инициализации
		7-8[Uint16]: маска команды	
		9-12[Uint32]: время последней отметки на станции
		13[byte]: счетчик сохраненных страниц (4 байта страница)
	
	//постранично получить данные с карточки
	readCardPage(): 0x87
		0[byte]: с какой страницы карточки
		1[byte]: по какую страницу карточки включительно
		ответ: 0x97
		0[byte]: код ошибки
		1-8[byteArray]: UID карточки
		9[byte]: номер начальной страницы
		10-...[byteArray]: данные из страницы карточки (по 4 байта на страницу)
		
	обновить маску команды
	updateTeamMask(): 0x88
		0-1[Uint16]: номер команды (для проверки)
		2-5[Uint32]: время выдачи карточки (для проверки)
		6-7[Uint16]: маска участников	
		ответ: 0x98
		0[byte]: код ошибки
	
	//постранично записать данные на карточку
	writeCardPage(): 0x89
		0-7[byteArray]: UID карточки (для проверки)
		8[byte]: номер страницы
		9-12[byteArray]: данные для записи (4 байта)
		ответ: 0x99
		0[byte]: код ошибки
	
	//получить данные об отметившихся командах их флэша
	readFlash(): 0x8a
		0-3[Uint32]: адрес начала чтения
		4[byte]: размер блока
		ответ: 0x9a
		0[byte]: код ошибки
		0-3[Uint32]: адрес начала чтения
		4-n[byteArray]: данные из флэша
	
	//записать данные на флэш
	writeFlash(): 0x8b
		0-3[Uint32]: адрес начала записи
		4...[byteArray]: данные для записи
		ответ: 0x9b
		0[byte]: код ошибки
		1[byte]: кол-во записанных байт (для проверки)
	
	//стереть сектор на флэше
	eraseTeamFlash(): 0x8c
		0-1[Uint16]: номер команды
		ответ: 0x9c
		0[byte]: код ошибки
	
	//получить конфигурацию станции
	getConfig(): 0x8d
		ответ: 0x9d
		0[byte]: код ошибки
		1[byte]: версия прошивки (лучше ее проверять всегда, чтобы не наткнуться на старую прошивку) 
		2[byte]: номер режима
		3[byte]: тип чипов (емкость разная, распознать их программно можно)
		4-7[Uint32]: емкость флэш-памяти
		8-11[float]: коэффициент пересчета напряжения (float, 4 bytes) - просто умножаешь коэффициент на полученное в статусе число и будет напряжение
		12[byte]: коэффициент усиления антенны RFID
		13-14[Uint32]: размер блока хранения команды
		15-16[Uint32]: размер стираемого блока
		17-20[float]: минимальное напряжение батареи
	
	//установить коэффициент пересчета напряжения
	setKoeff(): 0x8e
		0-3[float]: коэффициент пересчета напряжения
		ответ: 0x9e
		0[byte]: код ошибки
	
	//установить коэффициент усиления антенны RFID
	setGain(): 0x8f
		0[byte]: коэффициент усиления антенны RFID
		ответ: 0x9f
		0[byte]: код ошибки
	
	//установить тип чипа
	setChipType(): 0x90
		0[byte]: тип чипа
		ответ: 0xa0
		0[byte]: код ошибки
	
	//установить размер блока данных команды
	setTeamFlashSize(): 0x91
		0-1[Uint16]: новый размер блока команды
		ответ: 0xa1
		0[byte]: код ошибки
	
	//установить размер стираемого блока flash-памяти
	setFlashBlockSize(): 0x92
		0-1[Uint16]: новый размер flash-блока
		ответ: 0xa2
		0[byte]: код ошибки
	
	//установить имя Bluetooth адаптера
	setBtName(): 0x93
		0-n[byteArray]: новое имя
		ответ: 0xa3
		0[byte]: код ошибки
	
	//установить пин-код Bluetooth адаптера
	setBtPinCode(): 0x94
		0-n[byteArray]: новый пин-код
		ответ: 0xa4
		0[byte]: код ошибки
	
	//установить минимальное значение напряжения батареи
	setBatteryLimit(): 0x95
		0-3[float]: минимальное значение напряжения батареи (float 4 bytes)
		ответ: 0xa5
		0[byte]: код ошибки
		
	//получить список команд, сохраненных на флэше
	scanTeams(): 0x96
		0-1[Uint16]: Стартовый номер команды
		ответ: 0xa6
		0[byte]: код ошибки
		1-2[Uint16]: номер 1й команды
		3-4[Uint16]: номер 2й команды
		...
		(n-1)-n[Uint16]: номер последней команды
	
	//отправить командe в BT-модуль (работает только по проводу)
	sendBtCommand(): 0x97
		0-n[byteArray]: текст команды (для большинства модулей должнен завершаться 0x13, 0x10)
		ответ: 0xa7
		0[byte]: код ошибки
		1-n[byteArray]: текст ответа

	//получить последние ошибки
	getLastErrors(): 0x98
		ответ: 0xa8
		0[byte]: код ошибки
		1-2[byte]: номер 1й ошибки
		3-4[byte]: номер 2й ошибки
		...	
		(n-1)-n[byte]: номер последней ошибки
		Список ошибок:
			//коды ошибок при включении
			#define STARTUP_NUMBER  50 //STARTUP: incorrect station number in EEPROM
			#define STARTUP_MODE  51 //STARTUP: incorrect station mode in EEPROM
			#define STARTUP_VKOEFF  52 //STARTUP: incorrect Vkoeff in EEPROM
			#define STARTUP_GAIN  53 //STARTUP: incorrect gain in EEPROM
			#define STARTUP_CHIP_TYPE  54 //STARTUP: incorrect chip type in EEPROM
			#define STARTUP_TEAM_SIZE  55 //STARTUP: incorrect team block size in EEPROM
			#define STARTUP_ERASE_SIZE  56 //STARTUP: incorrect erase block size in EEPROM
			#define STARTUP_BATTERY_LIMIT  57 //STARTUP: incorrect battery limit in EEPROM
			
			
			//коды ошибок UART
			#define UART_TIMEOUT  60 //UART: receive timeout
			#define UART_PACKET_LENGTH  61 //UART: incorrect packet length
			#define UART_CRC  62 //UART: CRC incorrect
			#define UART_UNEXPECTED_BYTE  63 //UART: unexpected byte
			
			//коды ошибок обработки чипа
			#define PROCESS_READ_CHIP  70 //CARD PROCESSING: error reading chip
			#define PROCESS_HW_CHIP_TYPE  71 //CARD PROCESSING: wrong hw chip type
			#define PROCESS_SW_CHIP_TYPE  72 //CARD PROCESSING: wrong sw chip type
			#define PROCESS_FW_VERSION  73 //CARD PROCESSING: wrong fw. version
			#define PROCESS_INIT_TIME  74 //CARD PROCESSING: chip init time is due
			#define PROCESS_CHIP_NUMBER  75 //CARD PROCESSING: wrong chip number
			#define PROCESS_WRITE_CHIP  76 //CARD PROCESSING: error writing to chip
			#define PROCESS_ALREADY_CHECKED  77 //CARD PROCESSING: chip already checked
			#define PROCESS_FIND_FREE_PAGE  78 //CARD PROCESSING: error finding free page
			#define PROCESS_SAVE_DUMP  79 //CARD PROCESSING: error saving dump
			#define PROCESS_SEND_AUTOREPORT  80 //CARD PROCESSING: error sending autoreport

5. Коды ошибок в ответах станции:
	0  - OK
	1  - WRONG_STATION
	2  - RFID_READ_ERROR
	3  - RFID_WRITE_ERROR
	4  - LOW_INIT_TIME
	5  - WRONG_CHIP
	6  - NO_CHIP
	7  - BUFFER_OVERFLOW
	8  - WRONG_DATA
	9  - WRONG_UID
	10 - WRONG_TEAM
	11 - NO_DATA
	12 - WRONG_COMMAND
	13 - ERASE_ERROR
	14 - WRONG_CHIP_TYPE
	15 - WRONG_MODE
	16 - WRONG_SIZE
	17 - WRONG_FW_VERSION
	18 - WRONG_PACKET_LENGTH
	19 - FLASH_READ_ERROR
	20 - FLASH_WRITE_ERROR
	21 - EEPROM_READ_ERROR
	22 - EEPROM_WRITE_ERROR
	23 - BT_ERROR
