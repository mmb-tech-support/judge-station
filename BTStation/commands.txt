проверять на карте отметку текущей станции в финишном режиме

мои предложения ПОСЛЕ ММБ!!!:
1) Поднять скорость UART до 38400 бод - по datasheet это вполне допустимо для 8МГц.
2) Добавить команду смены BlueThooth PIN: setBtPin(char[16] pin)
3) Добавить команду смены BlueThooth Name: setBtName(char[32] pin)
4) добавить поддержку разных типов карт (Ntag213/15/16). Переключать только при инициализации станции.
5) добавить параметр "тип_метки" в команду resetStation()
6) добавить параметр "тип_метки" в ответ getStatus()
7) добавить размер флэша в ответ getStatus().
8) продумать систему сообщения пользователю об ошибках (писки и мигания светодиодом).
	- светодиод горит во время работы с картой и показает по завершению. Короткий писк (<0.5 сек.) раздается при окончании работы.
	- любая ошибка - длинный писк 2 секунды
	- добавить красный светодиод
9) сделать чтение RFID по прерыванию (а надо ли?) - займет 1 ногу и не будет постоянного опроса RFID-модуля
10) получать размер флэша для расчета глубины лога.
11) проверять версию прошивки при работе с карточками
12) проверять тип карты (кол-во страниц)
13) сделать размер ячейки лога адаптивным (под тип карты)
14) сделать возможность изменять настройки BT
	- вывести пин на сигнал KEY
	- добавить команды setBtPin() и setBtName()
15) добавить авторизацию в работу с картами

Формат кадра
[0] 0xFE
[1] 0xFE
[2] 0xFE
[3] station#
[4] data_length(n)
[5] command
[6] data[0]
... data[n-1]
[n] CRC8

//изменение режима станции
setMode()
	0: новый номер режима
	ответ
	0: код ошибки

//установка часов станции
setTime()
	0-5: дата и время [yy.mm.dd hh:mm:ss]
	ответ
	0: код ошибки
	1-4: текущее время

//сброс данных станции
resetStation()
	0-1: кол-во отмеченных карт  (для проверки)
	2-5: время последней отметки  (для проверки)
	6: новый номер станции
	ответ
	0: код ошибки

//текущее состояние станции
getStatus()
	ответ
	0: код ошибки
	1: версия прошивки
	2: номер режима
	3-6: текущее время
	7-8: количество отметок на станции
	9-12: время последней отметки на станции
	13-14: напряжение батареи в условных единицах [0..1023] ~ [0..1.1В]
	15-16: температура чипа DS3231 (чуть выше окружающей среды)
	//15-18: емкость флэш-памяти

//обнулить чип и подготовить для выдаче команде
initChip()
	0-1: номер команды
	2-3: маска участников
	//ПОСЛЕ ММБ!!! 4-11: UID чипа
	ответ
	0: код ошибки
	1-4: время инициализации
	5-12: UID чипа


//получить данные последнмх отметившихся команд
getLastTeams()
	ответ
	0: код ошибки
	1-2: номер 1й команды
	3-4: номер 2й команды
	...	
	(n-1)-n: номер последней команды

//получить записи об отметившихся командах из памяти станции
getTeamRecord()
	0-1: #команды
	ответ
	0: код ошибки
	1-2: номер команды
	3-6: время инициализации
	7-8: маска команды	
	9-12: время последней отметки на станции
	13: счетчик сохраненных страниц

//постранично получить данные с карты
readCardPage()
	0: с какой страницы карты
       	1: по какую страницу карты включительно
	ответ
	0: код ошибки
	1-8: UID чипа
	9: номер страницы
	10-13: данные из страницы карты (4 байта)
	14: номер страницы
	15-18: данные из страницы карты (4 байта)
	...и т.д.

обновить маску команды
updateTeamMask()
        0-1: номер команды (для проверки)
	2-5: время выдачи чипа (для проверки)
	6-7: маска участников
	//ПОСЛЕ ММБ!!! 8-15: UID чипа (для проверки)
	ответ
	0: код ошибки

//постранично записать данные на карту
writeCardPage()
	0-7: UID чипа (для проверки)
	8: номер страницы
	9-12: данные для записи (4 байта)
	ответ
	0: код ошибки

//получить данные об отметившихся командах их флэша
readFlash()
	0-3: адрес начала чтения
	4-7: адрес конца чтения
	ответ
	0: код ошибки
	1...: данные из флэша

//записать данные на флэш
writeFlash()
	0-3: адрес начала записи
	4...: данные для записи
	ответ
	0: код ошибки
	1: кол-во записанных байт (для проверки)
