To do:
+fw	1) доделать перезапись флэша для финишного режима.
+fw	2) в протокол ввести доп.параметр "ID запроса" (вместо 3-го 0xfe)
	- этот номер генерить при отправке команды и при отправке ответа станция будет этот номер оставлять в пакете.
+fw	3) поправить алгоритм смены маски команды (отметка схода участника)
	- новая маска хранится в памяти и обновляется при обработке карточки
	- после записи новой маски в карточку очищать буфер новой маски.
+fw	4) проверять версию прошивки при работе с чипами
+fw	5) запись в чип writeCardPage() разрешать только по UID
	- initChip() не требует UID, а возвращает его
fw	6) предупреждать оператора о падении напряжения ниже критического (3.3V ?)
  	- возможно, мигать красным...
fw	7) продумать систему сигнализации об ошибках
	- синий светодиод горит во время работы с карточкой и показает по завершению.
  	- короткий писк (<0.5 сек.) раздается при окончании работы.
  	- любая ошибка - длинный писк 2 секунды + красный светодиод. Номер ошибки по количеству миганий.
+fw	- добавить команду установки блока стирания flash: setFlashBlockSize()
fw	8) сделать бинарный поиск последнего занятого блока на карточке
fw	9) неудачная попытка отметки затирает дамп карточки команды.
	- Вариант - в режиме финишного КП записывать в буфер и обновлять основную запись только если не было ошибок.
fw	10) записывать на флэш блоками writeByteArray(). Читать флэш блоками readByteArray()
fw	11) сделать backupTeam(int team) и restoreTeam(int Team)
+fw	12) Для устранения постоянной отметки прислоненного чипа:
	- флаг с номером последней отмеченной команды устанавливать при отметке карточки или смене маски
	- флаг сбрасывать в 0 при ненахождении чипа в начале процедуры отметки
	- при флаге >0 не обрабатывать чип с номером как у флага.
+fw	- выпилить из getConfig() параметр "8-11: размер сектора флэш-памяти" - бесполезен.
+fw	- добавить команду установки имени Bluetooth адаптера
+fw	- добавить команду установки пин-кода Bluetooth адаптера
fw	- ???добавить в ответ getConfig() название, пин и MAC-адрес Bluetooth

====

1. Формат кадра:
	[0] 0xFE
	[1] 0xFE
	[2] packet ID
	[3] station number
	[4] data_length (data[0] - data[n-1])
	[5] command
	[6] data[0]
	... data[n-1]
	[n] CRC8 (packet ID - data[n-1])

2. Формат блока хранения команд в flash-памяти:
	1-2: номер команды
	3-6: время инициализации
	7-8: маска команды
	9-12: время отметки на станции
	13-14: размер дампа карточки [byte]
	15-16: резерв
	17-1024: полный дамп содержимого карточки
Размер блока задается командой setTeamFlashSize()
Нулевой блок не используется (нет команды №0).
Последние 4096 байт flash-памяти (последний блок) используется как временный буфер для перезаписи блоков команд.

3. Формат хранения данных на карточке участника:
	Страница(4 байта) - описание байт
	0 - [0-3] UID1
	1 - [0-3] UID2
	2 - 
	3 - [2] тип чипа
	4 - [0-1] номер команды, [2] тип чипа, [3] версия прошивки при инициализации
	5 - [0-3] время инициализации
	6 - [0-1] маска команды
	7 - 
	8 - [0] номер КП, [1-3] время посещения КП (байт 0 берется из времени инициализации карточки)
	9 - ...

3. Список команд:

//изменение режима станции
setMode()
	0: новый номер режима
	ответ
	0: код ошибки

//установка часов станции
setTime()
	0-5: дата и время [yy.mm.dd hh:mm:ss]
	ответ
	0: код ошибки
	1-4: текущее время

//сброс данных станции
resetStation()
	0-1: кол-во отмеченных карточек (для проверки)
	2-5: время последней отметки (для проверки)
	6: новый номер станции
	ответ
	0: код ошибки

//текущее состояние станции
getStatus()
	ответ
	0: код ошибки
	1-4: текущее время
	5-6: количество отметок на станции
	7-10: время последней отметки на станции
	11-12: напряжение батареи в условных единицах [0..1023] ~ [0..1.1В]
	13-14: температура чипа DS3231 (чуть выше окружающей среды)

//обнулить карточку и подготовить для выдаче команде
initChip()
	0-1: номер команды
	2-3: маска участников
	ответ
	0: код ошибки
	1-4: время инициализации
	5-12: UID карточки

//получить данные последнмх отметившихся команд
getLastTeams()
	ответ
	0: код ошибки
	1-2: номер 1й команды
	3-4: номер 2й команды
	...	
	(n-1)-n: номер последней команды

//получить записи об отметившихся командах из памяти станции
getTeamRecord()
	0-1: #команды
	ответ
	0: код ошибки
	1-2: номер команды
	3-6: время инициализации
	7-8: маска команды	
	9-12: время последней отметки на станции
	13-14: счетчик сохраненных байт

//постранично получить данные с карточки
readCardPage()
	0: с какой страницы карточки
       	1: по какую страницу карточки включительно
	ответ
	0: код ошибки
	1-8: UID карточки
	9: номер страницы
	10-13: данные из страницы карточки (4 байта)
	14: номер страницы
	15-18: данные из страницы карточки (4 байта)
	...и т.д.

обновить маску команды
updateTeamMask()
        0-1: номер команды (для проверки)
	2-5: время выдачи карточки (для проверки)
	6-7: маска участников	
	ответ
	0: код ошибки

//постранично записать данные на карточку
writeCardPage()
	0-7: UID карточки (для проверки)
	8: номер страницы
	9-12: данные для записи (4 байта)
	ответ
	0: код ошибки

//получить данные об отметившихся командах их флэша
readFlash()
	0-3: адрес начала чтения
	4: размер блока
	ответ
	0: код ошибки
	0-3: адрес начала чтения
	4-n: данные из флэша

//записать данные на флэш
writeFlash()
	0-3: адрес начала записи
	4...: данные для записи
	ответ
	0: код ошибки
	1: кол-во записанных байт (для проверки)

//стереть сектор на флэше
eraseTeamFlash()
	0-1: номер команды
	ответ
	0: код ошибки

//получить конфигурацию станции
getConfig()
	0: код ошибки
	1: версия прошивки (лучше ее проверять всегда, чтобы не наткнуться на старую прошивку) 
	2: номер режима
	3: тип чипов (емкость разная, распознать их программно можно)
	4-7: емкость флэш-памяти
	8-11: коэффициент пересчета напряжения (float, 4 bytes) - просто умножаешь коэффициент на полученное в статусе число и будет напряжение
	12: коэффициент усиления антенны RFID
	13-14: размер блока хранения команды
	15-26: размер стираемого блока

//установить коэффициент пересчета напряжения
setKoeff()
	0-3: коэффициент (float 4 bytes)
	ответ
	0: код ошибки

//установить коэффициент усиления антенны RFID
setGain()
	0: коэффициент усиления антенны RFID
	ответ
	0: код ошибки

//установить тип чипа
setChipType()
	0: тип чипа
	ответ
	0: код ошибки

//установить размер блока данных команды
setTeamFlashSize()
	0-1: новый размер блока команды
	ответ
	0: код ошибки

//установить размер стираемого блока flash-памяти
setFlashBlockSize()
	0-1: новый размер flash-блока
	ответ
	0: код ошибки

//установить имя Bluetooth адаптера
setBtName()
	0-n: новое имя
	ответ
	0: код ошибки

//установить пин-код Bluetooth адаптера
setBtPinCode()
	0-n: новый пин-код
	ответ
	0: код ошибки
