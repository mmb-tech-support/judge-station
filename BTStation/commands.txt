Формат кадра
[0] 0xFE
[1] 0xFE
[2] packet ID
[3] station number
[4] data_length(n)
[5] command
[6] data[0]
... data[n-1]
[n] CRC8

//изменение режима станции
setMode()
	0: новый номер режима
	ответ
	0: код ошибки

//установка часов станции
setTime()
	0-5: дата и время [yy.mm.dd hh:mm:ss]
	ответ
	0: код ошибки
	1-4: текущее время

//сброс данных станции
resetStation()
	0-1: кол-во отмеченных карт  (для проверки)
	2-5: время последней отметки  (для проверки)
	6: новый номер станции
	ответ
	0: код ошибки

//текущее состояние станции
getStatus()
	ответ
	0: код ошибки
	1-4: текущее время
	5-6: количество отметок на станции
	7-10: время последней отметки на станции
	11-12: напряжение батареи в условных единицах [0..1023] ~ [0..1.1В]
	13-14: температура чипа DS3231 (чуть выше окружающей среды)

//обнулить чип и подготовить для выдаче команде
initChip()
	0-1: номер команды
	2-3: маска участников
	ответ
	0: код ошибки
	1-4: время инициализации
	5-12: UID чипа

//получить данные последнмх отметившихся команд
getLastTeams()
	ответ
	0: код ошибки
	1-2: номер 1й команды
	3-4: номер 2й команды
	...	
	(n-1)-n: номер последней команды

//получить записи об отметившихся командах из памяти станции
getTeamRecord()
	0-1: #команды
	ответ
	0: код ошибки
	1-2: номер команды
	3-6: время инициализации
	7-8: маска команды	
	9-12: время последней отметки на станции
	13-14: счетчик сохраненных байт

//постранично получить данные с карты
readCardPage()
	0: с какой страницы карты
       	1: по какую страницу карты включительно
	ответ
	0: код ошибки
	1-8: UID чипа
	9: номер страницы
	10-13: данные из страницы карты (4 байта)
	14: номер страницы
	15-18: данные из страницы карты (4 байта)
	...и т.д.

обновить маску команды
updateTeamMask()
        0-1: номер команды (для проверки)
	2-5: время выдачи чипа (для проверки)
	6-7: маска участников
	//8-15: UID чипа (для проверки)
	ответ
	0: код ошибки

//постранично записать данные на карту
writeCardPage()
	0-7: UID чипа (для проверки)
	8: номер страницы
	9-12: данные для записи (4 байта)
	ответ
	0: код ошибки

//получить данные об отметившихся командах их флэша
readFlash()
	0-3: адрес начала чтения
	4-7: адрес конца чтения
	ответ
	0: код ошибки
	0-3: адрес начала чтения
	4-n: данные из флэша

//записать данные на флэш
writeFlash()
	0-3: адрес начала записи
	4...: данные для записи
	ответ
	0: код ошибки
	1: кол-во записанных байт (для проверки)

//стереть сектор на флэше
eraseTeamFlash()
	0-1: номер команды
	ответ
	0: код ошибки

//получить конфигурацию станции
getConfig()
	0: код ошибки
	1: версия прошивки (лучше ее проверять всегда, чтобы не наткнуться на старую прошивку) 
	2: номер режима
	3: тип чипов (емкость разная, распознать их программно можно)
	4-7: емкость флэш-памяти
	8-11: размер сектора флэш-памяти
	12-15: коэффициент пересчета напряжения (float, 4 bytes) - просто умножаешь коэффициент на полученное в статусе число и будет напряжение
	16: коэффициент усиления антенны RFID
	17-18: размер блока хранения команды

//установить коэффициент пересчета напряжения
setKoeff()
	0-3: коэффициент (float 4 bytes)
	ответ
	0: код ошибки

//установить коэффициент усиления антенны RFID
setGain()
	0: коэффициент усиления антенны RFID
	ответ
	0: код ошибки

//установить тип чипа
setChipType()
	0: тип чипа
	ответ
	0: код ошибки

setTeamFlashSize()
	0-1: новый размер блока команды
	ответ
	0: код ошибки

To do:
+fw		1) доделать перезапись флэша для финишного режима.
+fw		2) в протокол ввести доп.параметр "ID запроса" (вместо 3-го 0xfe)
		- этот номер генерить при отправке команды и при отправке ответа станция будет этот номер оставлять в пакете.
fw		3) поправить алгоритм смены маски команды (отметка схода участника)
		- после записи новой маски в чип выставлять флаг смены маски.
		- при поднятом флаге не обрабатывать чип с номером из данных на смену маски.
		- сбрасывать этот флаг и стирать данные маски из станции по отметке любого другого чипа.
+fw		4) проверять версию прошивки при работе с чипами
+fw		5) любую запись в чип разрешать только по UID
		- initChip() не требует UID, а возвращает его
fw		6) предупреждать оператора о падении напряжения ниже критического (3.3V ?)
	  	- возможно, мигать красным...
fw		7) продумать систему сигнализации об ошибках
		- синий светодиод горит во время работы с картой и показает по завершению.
	  	- короткий писк (<0.5 сек.) раздается при окончании работы.
	  	- любая ошибка - длинный писк 2 секунды + красный светодиод. Номер ошибки по количеству миганий.
